# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.5-node
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            bundle clean
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
            - v1-yarn-dependencies-
      - run:
          name: install js dependencies
          command: |
            yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ./node_modules
          key: v1-yarn-dependencies-{{ checksum "yarn.lock" }}

  rspec:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
        environment:
          xpack.security.enabled: false
    steps:
      - checkout
      - run: gem install bundler
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
      - run: bundle check --path vendor/bundle
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # run scans
      - run:
          name: Standard ruby
          command: bundle exec rake standard
      - run:
          name: Brakeman
          command: bundle exec rake brakeman
      - run:
          name: Bundle audit
          command: bundle exec rake bundle:audit
      - run:
          name: Yarn audit
          command: bundle exec rake yarn:audit

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    working_directory: ~/repo
    docker:
      - image: rcahearn/rubycf:2.6.5-node
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
        environment:
          xpack.security.enabled: false
    steps:
      - checkout
      - run: gem install bundler
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
      - run: bundle check --path vendor/bundle
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: generate api docs
          command: bundle exec rake docs:generate
      - run:
          name: precompile assets
          environment:
            NODE_ENV: production
            RAILS_ENV: production
          command: bundle exec rake assets:precompile

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rspec:
          requires:
            - build
      - deploy:
          requires:
            - rspec
